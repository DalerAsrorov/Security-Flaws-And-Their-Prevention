For part 3, you are required not to submit an executable exploit, but
instead a transcript of all steps required.

For example, if the task was "log on to CourseWeb", a transcript would
look like:

1. go to http://courseweb.seas.ucla.edu/
2. click LOGIN
3. In the username window, enter your username
4. in the password window, enter your password.
5. Click submit.

The transcript should include *ALL* input or actions required to
perform each task in the assignment.

Q: Show how you can log into an account without knowing any id
numbers ahead of time.

1. go to http://localhost:8118/cgi-bin/FCCU.php
2. In the account number  window, type any number. You must input integers ONLY.
3. In the password window, type any of the following:
   i)' OR '1'='1
   ii)' OR ''='
   iii) hi' OR 'x'='x

Note: The commands listed above are one of the MySQL command types.

Make sure you copy exactly one of the mentioned strings. "OR"
is one of the MySQL operators so include it as well.
4. Click Submit.
5. You are now in one of the accounts in the database.

Q: Show how you can log into *every* account without knowing any
particular id numbers ahead of time. (You can use any id numbers you
discover during the attack but you can't use your "inside knowledge"
of the SQL server.)

1. GO to http://localhost:8118/cgi-bin/FCCU.php
2. Log into a single account. Follow the steps provided in the question above
on how to access single account.
3. Once you are logged in as some user, click on the "Transfer To" drop-down menu.
4. Choose the employees whose accounts you want to access and write down their names/lastnames.
5. Go back to http://localhost:8118/cgi-bin/FCCU.php again.
6. In the account number window, type any integer. Integers required only.
7. In the password window, type the following: ' OR '1'='1' AND last='(Lastname of the target)
Example:
        Password: OR '1'='1' AND last='BUSH
8. You are now in the account of your chosen target.

Note: you can access any accounts only by changing the value of lastname.
As mentioned in part 1, you can access a single account, and learn
all the last names right there and use it following the given steps on question 2.

Q: Make some account (your choice) wire its total balance to the bank
with routing number "314159265" and account number "271828182845".

1. GO to http://localhost:8118/cgi-bin/FCCU.php
2. Log into any  account you want by following the steps provided on question 2.
3. Look at the actual account number provided on the account's page.
4. Copy the account number and go back to login window.
5. In the account number  window, type the copied account number.
6. In the password window type the following: ' OR '1'='1' AND last='(lastname of the target).
Example:
        Password:' OR '1'='1' AND last='BUSH
7. Once you loged in do the following:
        i) In "Wire Amount" window, input the total balance of the account.
        ii) In "Routing Number" window, input "314159265" without quotes.
        iii) In "Account Number" window, input "271828182845" without quotes.
8. Click Wire Money.
9. You will see that the confirmation will be shown on the page.

Q: Explain why you can't create a new account or arbitrarily update
account balances (or show that you can).

The attacker can update  account balances by wiring funds. The attacker can withdraw/addmoney from one account to another by logging in and wiring funds. However, before wiring funds, the attacker should know the account number and MySQL "tricky" commands provided on questions 2 and/or 3. Once the atacker know the lastname and account number, the attacker can wire funds around from account to another. Also, the atacker have to know the Routing Number. If the
Routing Number cannot be known, then he/she can't wire funds.
Neverthless, the attacker  cannot create a new balance because he/she doesn't havean allowance  to manipulate the PHP code. So the
changes the attacker can make to an account are quite limited.

Q: Estimate how much time you spent on this lab (all 3 parts).

- About 15-20 hours.

Q: Fix the vulnerability in the FCCU.php application and any other tasks
in the lab manual.

- To fix the vulnerability, I added the methods addshlashes() that
adds slashaes on invalid inpute such as quote and unusual characters.
As a result, the attacker can't use mysql commands to access the accounts.

